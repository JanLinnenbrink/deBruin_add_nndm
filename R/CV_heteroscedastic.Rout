
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # *****************************************************************************
> # R Script implementing heteroscedastic model-based based cross-validation.  
> # Related to the paper "Dealing with clustered samples for assessing map 
> # accuracy by cross-validation".
> # Contact: Sytze de Bruin, Wageningen University, Laboratory of Geo-information
> # Science and Remote Sensing, email: sytze.debruin@wur.nl
> # May 3, 2022
> # *****************************************************************************
> Sys.sleep(round(runif(1, min = 1, max = 240)))
> # ****** load required libraries *******
> .libPaths("/home/j/jlinnenb/r_packages")
> library(sf)
Linking to GEOS 3.9.1, GDAL 3.3.0, PROJ 8.0.1; sf_use_s2() is TRUE
> library(gstat)
> library(terra)
terra 1.6.11
> library(ranger)
> library(spatstat)
Loading required package: spatstat.data
Loading required package: spatstat.geom
spatstat.geom 2.1-0

Attaching package: ‘spatstat.geom’

The following objects are masked from ‘package:terra’:

    area, delaunay, rescale, rotate, shift, where.max, where.min

Loading required package: spatstat.core
Loading required package: nlme
Loading required package: rpart
spatstat.core 2.1-2

Attaching package: ‘spatstat.core’

The following object is masked from ‘package:gstat’:

    idw

Loading required package: spatstat.linnet
spatstat.linnet 2.1-1

spatstat 2.1-0       (nickname: ‘Comedic violence’) 
For an introduction to spatstat, type ‘beginner’ 

> library(parallel)
> 
> # ************ GLOBALS ***************
> 
> infolder1 <- "/scratch/tmp/jlinnenb/deBruin_add_nndm/CVresults/modelbased"
> infolder2 <- "/scratch/tmp/jlinnenb/deBruin_add_nndm/CVresults/random"
> infolder3 <- "/scratch/tmp/jlinnenb/deBruin_add_nndm/data"
> outfolder <- "/scratch/tmp/jlinnenb/deBruin_add_nndm/CVresults/heteroscedastic"
> nsim <- 200        # number of sequential Gaussian simulations
> i_CV <- 1:3  # cross validation replications analysed
> startseed <- 1234567
> cores=1
> 
> csv_file <- file.path(outfolder, "runs.csv")
> runs <- read.csv(csv_file)
> lastIndex <- runs[nrow(runs),1]
> thisIndex <- lastIndex + 1
> print(paste0("this Index is: ", thisIndex))
[1] "this Index is: 101"
> runs[thisIndex,1] <- thisIndex
> write.csv(runs, file = csv_file, row.names = FALSE)
> 
> 
> # coordinate reference system
> CRSlaea   <- paste0("+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 ",
+                     "+ellps=GRS80 +units=m +no_defs")
> 
> # check whether infolders exist; if not, stop
> if(!dir.exists(infolder1)){
+   cat('First run "CV_model_based.R"\n\n')
+   stop(paste("directory", infolder1, "does not exist")) 
+ }
> 
> if(!dir.exists(infolder2)){
+   cat('First run "CV_random.R"\n\n')
+   stop(paste("directory", infolder2, "does not exist")) 
+ }
> 
> # create outfolder if needed
> if(!dir.exists(outfolder))
+   dir.create(outfolder, recursive=T)
> 
> # ************ FUNCTIONS ***************
> 
> getDensity <- function(x, y, win, rsl){
+   spp <- ppp(x, y, win)
+   s <- bw.CvL(spp)
+   den <- density.ppp(spp, eps=rsl, sigma=s, positive=T)
+   denmat <- as.matrix.im(den)
+   denrot <- transmat(denmat, from="spatstat", to="Europe")
+   denext <- ext(round(c(den$xrange, den$yrange),0))
+   denrast<- rast(denrot, crs=CRSlaea)
+   ext(denrast) <- denext
+   return(denrast)
+ }
> 
> getVgm <- function(pts, variate){
+   bnds <- c(1:5 * 5000, 3:20 * 10000)
+   if(variate=="AGB"){
+     vgmod <- vgm(0.15, "Exp", 40000, add.to = vgm(0.25, "Sph", 15000, 0.6))
+   } else {
+     vgmod <- vgm(0.1, "Sph", 20000, 0.6, add.to=vgm(0.2, "Gau", 170000))
+   }
+   vg  <- variogram(resprime~1, pts, boundaries=bnds)
+   vgmod <- tryCatch(fit.variogram(vg, vgmod), warning = function(w) w)
+   if (is(vgmod, "warning")){
+     vgmod <- vgm(0.4, "Exp", 40000, 0.6)
+     vgmod <- fit.variogram(vg, vgmod)
+   }
+   return(list(vg, vgmod))
+ }
> 
> 
> # ************ MAIN ************ 
> 
> studarea <- st_union(st_read(file.path(infolder3, "strata.shp")))
Reading layer `strata' from data source 
  `/scratch/tmp/jlinnenb/deBruin_add_nndm/data/strata.shp' using driver `ESRI Shapefile'
Simple feature collection with 100 features and 1 field
Geometry type: MULTIPOLYGON
Dimension:     XY
Bounding box:  xmin: 2633250 ymin: 1386000 xmax: 5603250 ymax: 3401000
CRS:           NA
> polbuf <- st_buffer(studarea, 5000)
> polbuf <- st_buffer(polbuf,  -2500)
> win    <- as.owin(polbuf)
> rm(studarea, polbuf)
> 
> # simulation grid (fixed)
> agg_area <- rast(file.path(infolder3, "aggArea.tif"))
> agg_pnts <- as.points(agg_area)
> sf_pnts <- st_as_sf(agg_pnts)
> st_crs(sf_pnts) <- as.character(NA)
> st_crs(sf_pnts) <- CRSlaea
> rm(agg_area)
> 
> # dataframe with covariates on the grid
> AGBstack <- AGBstack <- rast(file.path(infolder3, "AGBstack.tif"))
Error: [rast] file does not exist: /scratch/tmp/jlinnenb/deBruin_add_nndm/data/AGBstack.tif
In addition: Warning message:
In new_CppObject_xp(fields$.module, fields$.pointer, ...) :
  GDAL Error 4: /scratch/tmp/jlinnenb/deBruin_add_nndm/data/AGBstack.tif: No such file or directory
Execution halted
